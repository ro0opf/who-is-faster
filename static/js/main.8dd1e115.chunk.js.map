{"version":3,"sources":["App.css.tsx","page/Main.css.tsx","ui/MainBody.css.tsx","components/User.tsx","ui/MainBody.tsx","ui/MainHeader.css.tsx","ui/MainHeader.tsx","page/Main.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","props","red","green","blue","alpha","height","User","TableRow","TableCell","id","nickname","message","record","MainBody","btnGameStartOnClick","useState","top10Users","setTop10Users","useEffect","a","axios","result","console","log","data","FetchTop10Users","className","Paper","Table","TableHead","TableBody","map","user","index","key","Button","variant","style","width","fontSize","backgroundColor","onClick","MainHeader","Main","gameState","setGameState","setRed","setBlue","setGreen","setAlpha","startTime","setStartTime","score","setScore","setNickname","setMessage","Countdown","countdown","setCountdown","intervalId","setInterval","clearInterval","gameTime","Math","random","setTimeout","Date","getTime","toString","StartGame","endTime","noValidate","autoComplete","TextField","label","onChange","e","target","value","get","then","res","postData","ip","post","params","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dd1e115.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    top:0;\r\n    left:0;\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    font-family: '나눔바른고딕','Nanum Barun Gothic','Noto Sans KR','Malgun Gothic';\r\n`;","import styled from \"styled-components\";\r\n\r\ntype IProps = {\r\n    red? : string,\r\n    green? : string,\r\n    blue? : string,\r\n    alpha? : string\r\n}\r\n\r\nexport const Wrapper = styled.div`\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background : rgba(${(props : IProps) => props.red}, ${(props : IProps) => props.green}, \r\n                ${(props : IProps) => props.blue}, ${(props : IProps) => props.alpha}); \r\n    font-family: '나눔바른고딕','Nanum Barun Gothic','Noto Sans KR','Malgun Gothic';\r\n\r\n    & > div.div-countdown {\r\n        width : 100%;\r\n        height : 100%;\r\n        display : table;\r\n    }\r\n\r\n    & > div.div-countdown > p {\r\n        color : white;\r\n        font-size : 150px;\r\n        text-align : center;\r\n        vertical-align : middle;\r\n        display : table-cell;\r\n    }\r\n\r\n    & > div.form {\r\n        display : flex;\r\n        width : 100%;\r\n        height : 100%;\r\n        justify-content : center;\r\n        align-items : center;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\ntype IProps = {\r\n    height : string,\r\n}\r\n\r\nexport const Wrapper = styled.div`\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    position : relative;\r\n    height: ${(props:IProps) => props.height};\r\n    font-family: '나눔바른고딕','Nanum Barun Gothic','Noto Sans KR','Malgun Gothic';\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    & > div.user-rank {\r\n        flex : 0;\r\n        width : 80%;\r\n    }\r\n\r\n    & > div.btn-game-start {\r\n        display : flex;\r\n        width : 100%;\r\n        flex : 1;\r\n        justify-content : center;\r\n        align-items : center;\r\n    }\r\n`;","import React, {} from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\ntype IProps = {\r\n    key : number,\r\n    id : number,\r\n    nickname : string,\r\n    message : string,\r\n    record : number,\r\n}\r\n\r\n\r\nfunction User(props : IProps) {\r\n    return (\r\n        <TableRow>\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.nickname}</TableCell>\r\n            <TableCell>{props.message}</TableCell>\r\n            <TableCell>{props.record}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { useState, useEffect } from 'react'\r\nimport { Wrapper } from './MainBody.css'\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core'\r\nimport User from '../components/User'\r\nimport axios from 'axios'\r\n\r\ntype IProps = {\r\n    height: string,\r\n    btnGameStartOnClick: React.MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\n\r\nexport interface ITop10Users {\r\n    key: number,\r\n    id: number,\r\n    nickname: string,\r\n    message: string,\r\n    record: number,\r\n}\r\n\r\nfunction MainBody({ height, btnGameStartOnClick }: IProps) {\r\n    const [top10Users, setTop10Users] = useState<ITop10Users[]>([])\r\n\r\n    useEffect(() => {\r\n        async function FetchTop10Users() {\r\n            const result = await axios(\r\n                'http://116.123.85.116:9999/click/query?rank=10'\r\n            )\r\n\r\n            console.log(result.data);\r\n\r\n            setTop10Users(result.data)\r\n        }\r\n        FetchTop10Users()\r\n\r\n        return function CleanUp() {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper height={height}>\r\n            <div className=\"user-rank\">\r\n                <Paper>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Rank</TableCell>\r\n                                <TableCell>Nickname</TableCell>\r\n                                <TableCell>Message</TableCell>\r\n                                <TableCell>Record(second)</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {top10Users.map((user: ITop10Users, index: number) => {\r\n                                return (\r\n                                    <User\r\n                                        key={user.id}\r\n                                        id={index + 1}\r\n                                        nickname={user.nickname}\r\n                                        message={user.message}\r\n                                        record={user.record / 1000} />\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n            <div className=\"btn-game-start\">\r\n                <Button variant=\"contained\" style={{ width : \"70%\", height : \"30%\", fontSize : \"30px\",  backgroundColor: \"green\" }} onClick={btnGameStartOnClick}>\r\n                    Game Start\r\n                </Button>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default MainBody;","import styled from \"styled-components\";\r\n\r\ntype IProps = {\r\n    height : string,\r\n}\r\n\r\nexport const Wrapper = styled.div`\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    position : relative;\r\n    height: ${(props:IProps) => props.height};\r\n    font-family: '나눔바른고딕','Nanum Barun Gothic','Noto Sans KR','Malgun Gothic';\r\n\r\n    & > div.title {\r\n        position : relative;\r\n        transform: translateY(-50%);\r\n        top: 50%;\r\n        color : white;\r\n        text-align : center;\r\n        font-size : 60px;\r\n    }\r\n`;","import React, { } from 'react';\r\nimport { Wrapper } from './MainHeader.css';\r\n\r\ntype IProps = {\r\n    height: string,\r\n}\r\n\r\nfunction MainHeader({ height }: IProps) {\r\n    return (\r\n        <Wrapper height={height}>\r\n            <div className=\"title\">\r\n                Who is faster?\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import React, { useEffect, useState } from 'react'\r\nimport { Wrapper } from './Main.css'\r\nimport MainBody from '../ui/MainBody'\r\nimport MainHeader from 'ui/MainHeader'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst BEFORE_START = 0\r\nconst READY_TO_START = 1\r\nconst START_GAME = 2\r\nconst END_GAME = 3\r\n\r\nfunction Main() {\r\n    const [gameState, setGameState] = useState<number>(0)\r\n    const [red, setRed] = useState<string>('0')\r\n    const [blue, setBlue] = useState<string>('0')\r\n    const [green, setGreen] = useState<string>('0')\r\n    const [alpha, setAlpha] = useState<string>('0.95')\r\n    const [startTime, setStartTime] = useState<number>(0)\r\n    const [score, setScore] = useState<number>(0)\r\n    const [nickname, setNickname] = useState<string>('')\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    function BtnGameStartOnClick() {\r\n        setGameState(READY_TO_START)\r\n    }\r\n\r\n    function Countdown() {\r\n        const [countdown, setCountdown] = useState(3)\r\n\r\n        useEffect(() => {\r\n            if (!countdown) {\r\n                StartGame()\r\n                return\r\n            }\r\n\r\n            const intervalId = setInterval(() => {\r\n                setCountdown(countdown - 1)\r\n            }, 1000)\r\n\r\n            return function CleanUp() {\r\n                clearInterval(intervalId)\r\n            }\r\n        }, [countdown])\r\n\r\n        return (\r\n            <div className=\"div-countdown\">\r\n                <p>\r\n                    {countdown !== 0 ? countdown : null}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function StartGame() {\r\n        const min = 1000\r\n        const max = 5000\r\n        const gameTime = min + Math.random() * (max - min)\r\n\r\n        setTimeout(() => {\r\n            setStartTime(new Date().getTime())\r\n            setGameState(START_GAME)\r\n\r\n            const min = 0\r\n            const max = 255\r\n            const red = min + Math.random() * (max - min)\r\n            const blue = min + Math.random() * (max - min)\r\n            const green = min + Math.random() * (max - min)\r\n            const alpha = Math.random()\r\n\r\n            setRed(red.toString())\r\n            setBlue(blue.toString())\r\n            setGreen(green.toString())\r\n            setAlpha(alpha.toString())\r\n        }, gameTime)\r\n    }\r\n\r\n    function CatchByUser() {\r\n        const endTime = new Date().getTime()\r\n        setScore(endTime - startTime)\r\n        setGameState(END_GAME)\r\n    }\r\n\r\n    function btnSaveGameResult() {\r\n        axios.get('https://api.ipify.org/?format=json')\r\n            .then((res) => {\r\n                const postData = { 'message': message, 'nickname': nickname, 'record': score, 'ip': res.data.ip }\r\n\r\n                axios.post('http://116.123.85.116:9999/click/save_rank', null, { params : postData }).then((res) => {\r\n                    setGameState(BEFORE_START)\r\n                    setRed('0')\r\n                    setBlue('0')\r\n                    setGreen('0')\r\n                    setAlpha('0.95')\r\n                })\r\n            })\r\n    }\r\n\r\n    switch (gameState) {\r\n        case BEFORE_START:\r\n            return (\r\n                <Wrapper red={red} green={green} blue={blue} alpha={alpha}>\r\n                    <MainHeader height=\"20%\" />\r\n                    <MainBody height=\"80%\" btnGameStartOnClick={BtnGameStartOnClick} />\r\n                </Wrapper>\r\n            )\r\n        case READY_TO_START:\r\n            return (\r\n                <Wrapper red={red} green={green} blue={blue} alpha={alpha}>\r\n                    <Countdown />\r\n                </Wrapper>\r\n            )\r\n        case START_GAME:\r\n            return (\r\n                <Wrapper red={red} green={green} blue={blue} alpha={alpha} onClick={CatchByUser}>\r\n                </Wrapper>\r\n            )\r\n        case END_GAME:\r\n            return (\r\n                <Wrapper red={'0'} green={'0'} blue={'0'} alpha={'0.05'}>\r\n                    <div className=\"form\">\r\n                        <form noValidate autoComplete=\"off\">\r\n                            <TextField style={{ width: \"50%\" }} id=\"outlined-basic\" label=\"Nickname\" variant=\"outlined\" onChange={(e) => setNickname(e.target.value)} />\r\n                            <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={(e) => setMessage(e.target.value)} />\r\n                        </form>\r\n                        <Button variant=\"contained\" style={{ backgroundColor: \"green\" }} onClick={btnSaveGameResult}>\r\n                            SAVE\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        {score}\r\n                    </div>\r\n                </Wrapper>\r\n            )\r\n        default:\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Wrapper } from './App.css';\r\nimport Main from './page/Main';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nfunction App() {  \r\n  return (\r\n    <Wrapper>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}